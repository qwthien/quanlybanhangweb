import streamlit as st
import pandas as pd
import plotly.express as px

# C·∫•u h√¨nh trang
st.set_page_config(page_title="Qu·∫£n l√Ω Kho H√†ng", layout="wide")

# Sidebar - Thanh ƒëi·ªÅu h∆∞·ªõng
with st.sidebar:
    st.image("https://www.svgrepo.com/show/354197/warehouse.svg", width=100)
    st.title("üì¶ Qu·∫£n l√Ω Kho H√†ng")
    page = st.radio("Ch·ªçn ch·ª©c nƒÉng", ["üè† Trang ch√≠nh", "üìä B√°o c√°o", "üìÇ Xu·∫•t d·ªØ li·ªáu"])

# üîπ D·ªØ li·ªáu m·∫´u
mock_data = [
    {"ID": 1, "T√™n": "Laptop Dell", "S·ªë l∆∞·ª£ng": 20, "Gi√°": 15000000},
    {"ID": 2, "T√™n": "Chu·ªôt Logitech", "S·ªë l∆∞·ª£ng": 50, "Gi√°": 500000},
    {"ID": 3, "T√™n": "B√†n ph√≠m c∆°", "S·ªë l∆∞·ª£ng": 30, "Gi√°": 1200000},
    {"ID": 4, "T√™n": "M√†n h√¨nh LG", "S·ªë l∆∞·ª£ng": 15, "Gi√°": 4500000},
    {"ID": 5, "T√™n": "·ªî c·ª©ng SSD", "S·ªë l∆∞·ª£ng": 25, "Gi√°": 2200000},
]

df = pd.DataFrame(mock_data)

# Trang ch√≠nh
if page == "üè† Trang ch√≠nh":
    st.subheader("üìã Danh s√°ch S·∫£n ph·∫©m")

    # Thanh t√¨m ki·∫øm
    search_query = st.text_input("üîç T√¨m ki·∫øm s·∫£n ph·∫©m", "")

    # B·ªô l·ªçc gi√° & s·ªë l∆∞·ª£ng
    min_price, max_price = st.slider("üí∞ L·ªçc theo gi√°", min_value=0, max_value=20000000, value=(0, 20000000))
    min_qty, max_qty = st.slider("üì¶ L·ªçc theo s·ªë l∆∞·ª£ng", min_value=0, max_value=100, value=(0, 100))

    # L·ªçc d·ªØ li·ªáu
    filtered_df = df[
        (df["T√™n"].str.contains(search_query, case=False, na=False)) &
        (df["Gi√°"] >= min_price) & (df["Gi√°"] <= max_price) &
        (df["S·ªë l∆∞·ª£ng"] >= min_qty) & (df["S·ªë l∆∞·ª£ng"] <= max_qty)
    ]

    # Hi·ªÉn th·ªã b·∫£ng d·ªØ li·ªáu
    st.dataframe(filtered_df)

# B√°o c√°o
elif page == "üìä B√°o c√°o":
    st.subheader("üìä Th·ªëng k√™ h√†ng t·ªìn kho")

    # Bi·ªÉu ƒë·ªì s·ªë l∆∞·ª£ng h√†ng t·ªìn
    fig_qty = px.bar(df, x="T√™n", y="S·ªë l∆∞·ª£ng", title="üì¶ S·ªë l∆∞·ª£ng t·ªìn kho", color="S·ªë l∆∞·ª£ng")
    st.plotly_chart(fig_qty, use_container_width=True)

    # Bi·ªÉu ƒë·ªì gi√° tr·ªã kho
    df["T·ªïng gi√° tr·ªã"] = df["S·ªë l∆∞·ª£ng"] * df["Gi√°"]
    fig_value = px.pie(df, names="T√™n", values="T·ªïng gi√° tr·ªã", title="üí∞ T·ªïng gi√° tr·ªã kho")
    st.plotly_chart(fig_value, use_container_width=True)

# Xu·∫•t d·ªØ li·ªáu
elif page == "üìÇ Xu·∫•t d·ªØ li·ªáu":
    st.subheader("üìÇ Xu·∫•t d·ªØ li·ªáu kho h√†ng")

    # Xu·∫•t ra CSV
    csv = df.to_csv(index=False).encode('utf-8')
    st.download_button(label="üì• T·∫£i xu·ªëng CSV", data=csv, file_name="danh_sach_san_pham.csv", mime="text/csv")

    # Xu·∫•t ra Excel
    excel_buffer = pd.ExcelWriter("danh_sach_san_pham.xlsx", engine="xlsxwriter")
    df.to_excel(excel_buffer, index=False, sheet_name="KhoHang")
    excel_buffer.close()

    with open("danh_sach_san_pham.xlsx", "rb") as file:
        st.download_button(label="üì• T·∫£i xu·ªëng Excel", data=file, file_name="danh_sach_san_pham.xlsx", mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet")
